@model IEnumerable<BillTrackerClient.App.Models.SubscriptionViewModel>
@{
    ViewData["Title"] = "All Subscriptions";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int index = 1;
}

<h1>@ViewData["Title"]</h1>
<hr />

<div class="modal fade" id="subscriptionModal" tabindex="-1" aria-labelledby="subscriptionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="subscriptionModalLabel">Update subscription</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formUpdateSubscriptions">
                    <div class="form-group">
                        <input type="number" hidden="hidden" />
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" placeholder="Enter subscription name..." />
                    </div>

                    <div class="form-group">
                        <input type="text" class="form-control" placeholder="Enter price..." />
                    </div>

                    <div class="form-group">
                        <input type="date" class="form-control" />
                    </div>

                    <partial name="~/Views/Shared/_CreateCompany.cshtml" />

                    <div class="form-group">
                        <label>Active?</label>
                        <input type="checkbox" class="form-check-input" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="btnUpdateSubscription" type="button" class="btn btn-primary">Update</button>
            </div>
        </div>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">@Html.DisplayNameFor(m => m.SubscriptionName)</th>
            <th scope="col">@Html.DisplayNameFor(m => m.PriceString)</th>
            <th scope="col">@Html.DisplayNameFor(m => m.IsActive)</th>
            <th scope="col">@Html.DisplayNameFor(m => m.DateDueString)</th>
            <th scope="col">@Html.DisplayNameFor(m => m.Company)</th>
            <th scope="col">Edit</th>
        </tr>
    </thead>
    <tbody id="subscriptionsTableBody">
        @if (Model.Count() > 0)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.SubscriptionId</td>
                    <td>@item.SubscriptionName</td>
                    <td>@item.PriceString</td>
                    <td><input asp-for="ElementAt(index - 1).IsActive" /></td>
                    <td>@item.DateDueString</td>
                    <td>@item.Company</td>
                    <td><button id="btnEdit-@index" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#subscriptionModal" type="button">Edit</button></td>
                </tr>

                index += 1;
            }
        }
        else
        {
            <tr>
                <th colspan="5">No subscriptions</th>
            </tr>
        }
    </tbody>
</table>
@section scripts {
    <script type="text/javascript">
        const tableBody = document.getElementById('subscriptionsTableBody');
        const buttons = tableBody.getElementsByTagName('button');
        const trs = tableBody.getElementsByTagName('tr');
        const formUpdateSubscriptions = document.getElementById('formUpdateSubscriptions');
        const fields = formUpdateSubscriptions.getElementsByTagName('input');
        const btnUpdateSubscription = document.getElementById('btnUpdateSubscription');
        const checkBoxes = tableBody.getElementsByTagName('input');


        $(document).ready(function() {
            for (let i = 0; i < buttons.length; i++) {
                const button = buttons[i];
                const tr = trs[i];
                const tds = tr.getElementsByTagName('td');


                button.addEventListener('click', function(e) {
                    e.preventDefault();

                    const tr = e.target.parentElement.parentElement;
                    const tds = tr.getElementsByTagName('td');
                    const checkbox = tr.getElementsByTagName('input')[0];

                    fields[0].value = tds[0].innerHTML;
                    fields[1].value = tds[1].innerHTML;
                    fields[2].value = tds[2].innerHTML.substring(1);
                    fields[3].value = tds[4].innerHTML;
                    fields[4].value = tds[5].innerHTML;
                    fields[5].checked = checkbox.checked;
                });

            }

            for (let a = 0; a < checkBoxes.length; a++) {
                const checkBox = checkBoxes[a];

                if (checkBox.type == 'checkbox') {
                    checkBox.addEventListener('change', function (e) {
                        e.preventDefault();

                        let message = toggleConfirmMessage('subscription', this.checked);
                        
                        if (confirm(message)) {
                            const tr = e.target.parentElement.parentElement;
                            const id = Number(tr.getElementsByTagName('td')[0].innerHTML);
                            const model = {
                                id: id,
                                isActive: this.checked
                            };

                            this.disabled = true;

                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("SubscriptionIsActive")',
                                data: JSON.stringify(model),
                                contentType: "application/json",
                                dataType: "JSON",
                                success: function (resp) {
                                    successMessage.innerHTML = resp;
                                },
                                error: function (err) {
                                    displayErrorMessage(err);

                                    checkBox.checked = !checkBox.checked;
                                }
                            });

                            this.disabled = false;
                        } else {
                            this.checked = !this.checked;
                        }
                    });
                }
            }
        });

        btnUpdateSubscription.addEventListener('click', function(e) {
            e.preventDefault();
            this.disabled = true;

            clearMessages();

            const subscriptionModel = {
                subscriptionId: fields[0].value,
                subscriptionName: fields[1].value,
                price: fields[2].value,
                dateDue: fields[3].value,
                companyText: fields[4].value,
                isActive: fields[5].checked
            };

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Update")',
                data: JSON.stringify(subscriptionModel),
                contentType: "application/json",
                dataType: "JSON",
                success : function(resp) {
                    console.log(resp);

                    successMessage.innerHTML = resp.message;
                    $('#subscriptionModal').modal('hide');
                    let row = null;

                    for(let a = 0; a < trs.length; a++) {
                        const tr = trs[a];

                        if (Number(tr.getElementsByTagName('td')[0].innerHTML) === Number(resp.subscriptionId)) {
                            row = tr;
                            break;
                        }
                    }

                    let  datas = row.getElementsByTagName('td');
                    let rowCheckBox = row.getElementsByTagName('input')[0];

                    datas[1].innerHTML = resp.subscriptionName;
                    datas[2].innerHTML = resp.priceString;
                    rowCheckBox.checked = resp.isActive;
                    datas[4].innerHTL = resp.dateDueString;
                    datas[5].innerHTML = resp.company;

                },
                error: function(error) {
                    displayErrorMessage(error);
                }
            });

            this.disabled = false;
        })
    </script>
}