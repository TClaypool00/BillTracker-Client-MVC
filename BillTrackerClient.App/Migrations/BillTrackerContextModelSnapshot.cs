// <auto-generated />
using System;
using BillTrackerClient.App.DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BillTrackerClient.App.Migrations
{
    [DbContext(typeof(BillTrackerContext))]
    partial class BillTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<decimal>("AmountDue")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("BillName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("BillId");

                    b.HasIndex(new[] { "CompanyId" }, "fk_companies_bill");

                    b.ToTable("bills", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("CommentBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int(11)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("CommentId");

                    b.HasIndex(new[] { "TypeId" }, "TypeId");

                    b.HasIndex(new[] { "UserId" }, "UserId");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Commenttype", b =>
                {
                    b.Property<int>("CommentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("CommentType1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CommentType");

                    b.HasKey("CommentTypeId");

                    b.ToTable("commenttypes", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("CompanyId");

                    b.HasIndex(new[] { "UserId" }, "UserId")
                        .HasDatabaseName("UserId1");

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Error", b =>
                {
                    b.Property<int>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("ErrorCode")
                        .HasColumnType("int(11)");

                    b.Property<int>("ErrorLine")
                        .HasColumnType("int(11)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ErrorId");

                    b.ToTable("error", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("LoanName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("MonthlyAmountDue")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("RemainingAmount")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("TotalAmountDue")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("LoanId");

                    b.HasIndex(new[] { "CompanyId" }, "fk_loans_companies");

                    b.ToTable("loans", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Miscellaneou", b =>
                {
                    b.Property<int>("MiscellaneousId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<DateOnly>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MiscellaneousId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CompanyId" }, "CompanyId");

                    b.ToTable("miscellaneous", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Paymenthistory", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateOnly>("DateDue")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DatePaid")
                        .HasColumnType("date");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int(11)");

                    b.Property<bool>("IsLate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int(11)");

                    b.HasKey("PaymentId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TypeId" }, "TypeId")
                        .HasDatabaseName("TypeId1");

                    b.ToTable("paymenthistory", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PostBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("PostId");

                    b.HasIndex(new[] { "UserId" }, "UserId")
                        .HasDatabaseName("UserId2");

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Reply", b =>
                {
                    b.Property<int>("ReplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("CommentId")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReplyBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("ReplyId");

                    b.HasIndex(new[] { "CommentId" }, "CommentId");

                    b.HasIndex(new[] { "UserId" }, "UserId")
                        .HasDatabaseName("UserId3");

                    b.ToTable("replies", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<decimal>("AmountDue")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SubscriptionId");

                    b.HasIndex(new[] { "CompanyId" }, "CompanyId")
                        .HasDatabaseName("CompanyId1");

                    b.ToTable("subscriptions", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Suggestion", b =>
                {
                    b.Property<int>("SuggestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("ApproveDenyBy")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("DateSubmitted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("DenyReason")
                        .HasColumnType("text");

                    b.Property<string>("SuggestBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SuggestHeader")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SuggestionOption")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("SuggestionId");

                    b.HasIndex(new[] { "ApproveDenyBy" }, "ApprovedBy");

                    b.HasIndex(new[] { "SuggestionOption" }, "SuggestionOption");

                    b.HasIndex(new[] { "UserId" }, "UserId")
                        .HasDatabaseName("UserId4");

                    b.ToTable("suggestions", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("TypeId");

                    b.ToTable("types", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Userprofile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<decimal>("Budget")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("MonthlySalary")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("Savings")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.HasKey("ProfileId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "UserId")
                        .HasDatabaseName("UserId5");

                    b.ToTable("userprofile", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwbill", b =>
                {
                    b.Property<decimal>("AmountDue")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("BillId")
                        .HasColumnType("int(11)");

                    b.Property<string>("BillName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateDue")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DatePaid")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("IsLate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwbills");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwcomment", b =>
                {
                    b.Property<string>("CommentBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CommentId")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int(11)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwcomments");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwcompany", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwcompanies");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwerror", b =>
                {
                    b.Property<int?>("ErrorCode")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("ErrorLine")
                        .HasColumnType("int(11)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<long>("UsersCount")
                        .HasColumnType("bigint(21)");

                    b.ToView("vwerrors");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwloan", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateDue")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DatePaid")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("IsLate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LoanId")
                        .HasColumnType("int(11)");

                    b.Property<string>("LoanName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("MonthlyAmountDue")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("RemainingAmount")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<decimal>("TotalAmountDue")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwloans");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwmiscellaneou", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("MiscellaneousId")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwmiscellaneous");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwpost", b =>
                {
                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PostBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PostId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwposts");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwreply", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ReplyBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ReplyId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwreplies");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwsubscription", b =>
                {
                    b.Property<decimal>("AmountDue")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int(11)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DateDue")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DatePaid")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("IsLate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int(11)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwsubscriptions");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwsuggestion", b =>
                {
                    b.Property<int?>("ApproveDenyBy")
                        .HasColumnType("int(11)");

                    b.Property<string>("AuthorFirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int(11)");

                    b.Property<string>("AuthorLastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateSubmitted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("DenyReason")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SuggestBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SuggestHeader")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SuggestionId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("SuggestionOption")
                        .HasColumnType("int(11)");

                    b.Property<string>("WaitingOption")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.ToView("vwsuggestions");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Vwuser", b =>
                {
                    b.Property<decimal>("Budget")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("MonthlySalary")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int(11)");

                    b.Property<decimal>("Savings")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.ToView("vwusers");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Watingoption", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("WaitingOption")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("OptionId")
                        .HasName("PRIMARY");

                    b.ToTable("watingoptions", (string)null);
                });

            modelBuilder.Entity("Usererror", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int(11)");

                    b.Property<int>("ErrorId")
                        .HasColumnType("int(11)");

                    b.HasKey("UserId", "ErrorId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ErrorId" }, "Constr_UserError_Error");

                    b.ToTable("usererror", (string)null);
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Bill", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Company", "Company")
                        .WithMany("Bills")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_companies_bill");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Comment", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Commenttype", "Type")
                        .WithMany("Comments")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("comments_ibfk_3");

                    b.HasOne("BillTrackerClient.App.DataModels.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("comments_ibfk_2");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Company", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.User", "User")
                        .WithMany("Companies")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("companies_ibfk_2");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Loan", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Company", "Company")
                        .WithMany("Loans")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_loans_companies");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Miscellaneou", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Company", "Company")
                        .WithMany("Miscellaneous")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("miscellaneous_ibfk_1");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Paymenthistory", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Type", "Type")
                        .WithMany("Paymenthistories")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("paymenthistory_ibfk_1");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Post", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("posts_ibfk_1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Reply", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Comment", "Comment")
                        .WithMany("Replies")
                        .HasForeignKey("CommentId")
                        .IsRequired()
                        .HasConstraintName("replies_ibfk_1");

                    b.HasOne("BillTrackerClient.App.DataModels.User", "User")
                        .WithMany("Replies")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("replies_ibfk_2");

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Subscription", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Company", "Company")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("subscriptions_ibfk_1");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Suggestion", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.User", "ApproveDenyByNavigation")
                        .WithMany("SuggestionApproveDenyByNavigations")
                        .HasForeignKey("ApproveDenyBy")
                        .HasConstraintName("suggestions_ibfk_2");

                    b.HasOne("BillTrackerClient.App.DataModels.Watingoption", "SuggestionOptionNavigation")
                        .WithMany("Suggestions")
                        .HasForeignKey("SuggestionOption")
                        .HasConstraintName("suggestions_ibfk_3");

                    b.HasOne("BillTrackerClient.App.DataModels.User", "User")
                        .WithMany("SuggestionUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("suggestions_ibfk_1");

                    b.Navigation("ApproveDenyByNavigation");

                    b.Navigation("SuggestionOptionNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Userprofile", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.User", "User")
                        .WithMany("Userprofiles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("userprofile_ibfk_1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Usererror", b =>
                {
                    b.HasOne("BillTrackerClient.App.DataModels.Error", null)
                        .WithMany()
                        .HasForeignKey("ErrorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Constr_UserError_Error");

                    b.HasOne("BillTrackerClient.App.DataModels.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Constr_UserError_user");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Commenttype", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Company", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Loans");

                    b.Navigation("Miscellaneous");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Type", b =>
                {
                    b.Navigation("Paymenthistories");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Companies");

                    b.Navigation("Posts");

                    b.Navigation("Replies");

                    b.Navigation("SuggestionApproveDenyByNavigations");

                    b.Navigation("SuggestionUsers");

                    b.Navigation("Userprofiles");
                });

            modelBuilder.Entity("BillTrackerClient.App.DataModels.Watingoption", b =>
                {
                    b.Navigation("Suggestions");
                });
#pragma warning restore 612, 618
        }
    }
}
